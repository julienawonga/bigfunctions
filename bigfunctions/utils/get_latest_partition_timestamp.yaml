type: procedure
author: jihene cherif
description: Return the maximum of the partition column of `fully_qualified_table`
arguments:
  - name: fully_qualified_table
    type: string
output:
  name: latest_partition_timestamp
  type: timestamp
examples:
  - description: ""
    arguments:
      - "my_project.my_dataset.my_table"
    output: |
      +----------------------------+
      | latest_partition_timestamp |
      +----------------------------+
      |         2023-01-10         |
      +----------------------------+
code: |
  declare project, dataset, table, partition_col string;
  declare column_name_sql string;
  declare timestamp_sql string;
  declare parts array<string> default split(replace(fully_qualified_table, '`', ''), '.');

  assert array_length(split(fully_qualified_table, '.')) = 3 as '`fully_qualified_table` must be like PROJECT.DATASET.TABLE';

  set project = parts[offset(0)];
  set dataset = parts[offset(1)];
  set table = parts[offset(2)];

  set column_name_sql = format(
    """
    select column_name
    from `%s.%s.INFORMATION_SCHEMA.COLUMNS`
    where table_name = @table and is_partitioning_column = 'YES'
    """,
    project, dataset
  );

  execute immediate column_name_sql into partition_col using table as table;

  set timestamp_sql = format(
    """
    create or replace temp table bigfunction_result as
      select
        cast(max(`%s`) as timestamp) as latest_partition_timestamp,
      from `%s.%s.%s`
    """,
    partition_col, project, dataset, table
  );

  execute immediate timestamp_sql;
