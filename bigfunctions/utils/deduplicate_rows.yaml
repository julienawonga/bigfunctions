type: procedure
author: Shivam Singh
description: Returns the deduplicated rows of `query_or_table_or_view`
arguments:
  - name: query_or_table_or_view
    type: string
output:
  name: table_rows
  type: any type
examples:
  - description: "Returns table with duplicate rows removed."
    arguments:
      - "my_project.my_dataset.my_table"
    output: |
      +-----+-----+
      | id1 | id2 |
      +-----+-----+
      | 1   | 2   |
      | 1   | 3   |
      | 2   | 3   |
      | 4   | 3   |
      | 6   | 3   |
      | 7   | 3   |
      | 8   | 9   |
      | 9   | 9   |
      +-----+-----+
  - description: "When incorrect table name is passed as arguments."
    arguments:
      - "my_project.my_dataset.my_tbl"
    output: |
      +-------------------------------------------------------------------------------------------------------------------------------------------+
      | f0_                                                                                                                                       |
      +-------------------------------------------------------------------------------------------------------------------------------------------+
      | Not found: Table my_project:my_dataset.my_tbl was not found in location US at [my_project:my_dataset.deduplicate_rows:2:13] |
      +-------------------------------------------------------------------------------------------------------------------------------------------+
  - description: "When a query is passed into the procedure."
    arguments:
      - "select data from unnest([1, 2, 3, 1]) data"
    output: |
      +------+
      | data |
      +------+
      | 1    |
      | 2    |
      | 3    |
      +------+
code: |
  declare formatted_sql string;
  declare sub_query string;
  declare cleaned_sql string;

  set cleaned_sql = lower(trim(trim(query_or_table_or_view, " "), "`"));
  if (starts_with(query_or_table_or_view, "with") or starts_with(query_or_table_or_view, "select"))
    then
      set sub_query = format(
        """
          select distinct * from (%s)
        """, cleaned_sql
        );
    else
      set sub_query = format(
        """
          select distinct * from `%s`
        """, cleaned_sql
        );
  end if;
  set formatted_sql = format(
    """
      create or replace temp table bigfunction_result as
         %s
    """, sub_query
    );

  execute immediate formatted_sql;

  exception when error then
    execute immediate """
      create or replace temp table bigfunction_result as
        select @@error.message as error""";
